/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2006                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default                          Euler;
}

gradSchemes
{
    default                          Gauss linear;
    grad(U)                          cellLimited Gauss linear 0.33;
    grad(p)                          Gauss linear;
    grad(nut)                        Gauss linear;
    grad(k)                          Gauss linear;
    grad(omega)                      Gauss linear;
}

divSchemes
{
    default                          Gauss linearUpwind default;
    div(U)                           Gauss linear;
    div(phi,U)                       Gauss linearUpwind grad(U);
    div(phi,p)                       Gauss linearUpwind grad(p);
    div(phi,nut)                     Gauss upwind;
    div(phi,k)                       Gauss upwind;
    div(phi,omega)                   Gauss upwind;
    div((nuEff*dev2(T(grad(U)))))    Gauss linear;
}

laplacianSchemes
{
    default                          Gauss linear limited 1;
    laplacian(p)                     Gauss linear limited 1;
    laplacian(nuEff,U)               Gauss linear limited 1;
    laplacian(nuEff,p)               Gauss linear limited 1;
    laplacian(nuEff,nut)             Gauss linear limited 1;
    laplacian(nuEff,k)               Gauss linear limited 1;
    laplacian(nuEff,omega)           Gauss linear limited 1;
}

interpolationSchemes
{
    default                          linear;
    flux(U)                          linear;
    flux(p)                          linear;
    flux(nut)                        linear;
    flux(k)                          linear;
    flux(omega)                      linear;
}

snGradSchemes
{
    default                          limited 1;
    snGrad(U)                        limited 1;
    snGrad(p)                        limited 1;
    snGrad(nut)                      limited 1;
    snGrad(k)                        limited 1;
    snGrad(omega)                    limited 1;
}

wallDist
{
    method                           meshWave;
}

// ************************************************************************* //
